/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                        if-layers = <1 2>;
                        then-layer = <3>;
                };
        };



        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  Y  |  C  |  L  |  M  |  K  |   |  Z  |  F   |  U  |  ,  |  '  |  =  |
// | TAB  |  I  |  S  |  R  |  T  |  G  |   |  P  |  N   |  E  |  A  |  O  |  -  |
// | SHFT |  Q  |  V  |  W  |  D  |  J  |   |  B  |  H   |  /  |  .  |  X  |  \  |
//                    | ALT | ENT | SPC |   | BKSP | CTRL | DEL |
                        bindings = <
   &kp ESC   &kp Y &kp C &kp L &kp M &kp K   &kp Z &kp F  &kp U     &kp COMMA &kp SQT  &kp EQUAL
   &kp TAB   &kp I &kp S &kp R &kp T &kp G   &kp P &kp N  &kp E     &kp A     &kp O    &kp MINUS
   &kp LSHFT &kp Q &kp V &kp W &kp D &kp J   &kp B &kp H  &kp FSLH  &kp DOT   &kp X    &kp BSLH
                   &kp LALT &kp RET &lt 1 SPACE   &lt 2 BSPC &kp LCTRL &kp DEL
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  F1  |  F2  |  F3  |  F4  |  F5  |   |  F6  |  F7  |  F8  |  F9  |  F10  |   ~   |
// | GUI  |      |      |      |      |      |   |  LFT |  DWN |  UP  |  RGT |   `   |  F11  |
// | CAPS |      |      |      |      |      |   | PSCR | HOME |  END | PGUP | PGDN  |  F12  |
//                      |  ALT |  ENT |  SPC |   | BKSP | CTRL |  DEL |
                        bindings = <
   &kp ESC   &kp F1 &kp F2 &kp F3 &kp F4 &kp F5   &kp F6 &kp F7 &kp F8 &kp F9 &kp F10   &kp TILDE
   &kp LGUI  &trans &trans &trans &trans &trans   &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp GRAVE  &kp F11
   &kp CAPS  &trans &trans &trans &trans &trans   &kp PSCRN &kp HOME &kp END &kp PG_UP &kp PG_DN  &kp F12
                      &kp LALT  &kp RET &lt 1 SPACE   &lt 2 BSPC &kp LCTRL &kp DEL
                        >;
                };
                raise_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  +  |
// | TAB  |  !  |  @  |  #  |    |  %  |   |  ^  |  &  |  *  |  (  |  )  |  _  |
// | SHFT |  [  |  ]  |  {  |  }  |  "  |   |  ;  |  :  |  ?  |  <  |  >  | "|" |
//                    | ALT | ENT | SPC |   | BKSP | CTRL| DEL |
                        bindings = <
   &kp ESC    &kp N1 &kp N2 &kp N3 &kp N4 &kp N5   &kp N6 &kp N7 &kp N8 &kp N9 &kp N0   &kp PLUS
   &kp TAB    &kp EXCL &kp AT &kp HASH &macro_pound &kp PRCNT   &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR   &kp UNDER
   &kp LSHFT  &kp LBKT &kp RBKT &kp LBRC &kp RBRC &kp DQT   &kp SEMI &kp COLON &kp QMARK &kp LT &kp GT   &kp PIPE2
                   &kp LALT &kp RET &lt 1 SPACE   &lt 2 BSPC &kp LCTRL &kp DEL
                        >;
                };
                tri_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |                     |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |                     |
// |      |     |     |     |     |     |   |     |     |     |     |     | TOGGLE_QWERTY_LAYER |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans   &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans   &trans
   &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans &trans &trans &trans &trans &trans
   &trans   &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans   &tog 4
                                &trans &trans &trans    &trans &trans &trans
                        >;
                };
                qwerty_layer {
// -----------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y   |  U   |  I  |  O  |  P  |  =  |
// |  TAB  |  A  |  S  |  D  |  F  |  G  |   |  H   |  J   |  K  |  L  |  ;  |  -  |
// |  SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N   |  M   |  /  |  .  |  ,  | TOGGLE_QWERTY_LAYER |
//                     | ALT | ENT | SPC |   | BKSP | CTRL | DEL |
                        bindings = <
   &kp ESC    &kp Q &kp W &kp E &kp R &kp T    &kp Y &kp U &kp I &kp O &kp P   &kp EQUAL
   &kp TAB    &kp A &kp S &kp D &kp F &kp G    &kp H &kp J &kp K &kp L &kp SEMI   &kp MINUS
   &kp LSHFT  &kp Z &kp X &kp C &kp V &kp B    &kp N &kp M &kp FSLH &kp DOT &kp COMMA   &tog 4
                        &kp LALT &kp RET &lt 1 SPACE   &lt 2 BSPC &kp LCTRL &kp DEL
                        >;
                };
        };

        macros {
        macro_pound: macro_pound {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "Pound Symbol Macro";
            wait-ms = <40>;
            tap-ms = <40>;
            bindings = <
                &macro_press   &kp LALT
                &macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N6 &kp KP_N3
                &macro_release &kp LALT
            >;
        };
    };
};
